<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function openblog_install() {
  
  // Install the markdown filter
  $markdown_format = array(
    'format' => 'markdown',
    'name' => 'Markdown',
    'weight' => 0,
    'filters' => array(
      // Line break filter.
      'filter_markdown' => array(
        'weight' => 0,
        'status' => 1,
      ),
      'codefilter' => array(
        'weight' => 1,
        'status' => 1,
      ),
      'gist_filter' => array(
        'weight' => 2,
        'status' => 1,
      ),
      'video_filter' => array(
        'weight' => 3,
        'status' => 1,
      ),
    ),
  );
  $markdown_format = (object) $markdown_format;
  filter_format_save($markdown_format);

  // Install theme and disable bartik
  theme_disable(array('bartik'));

  $enabled = array(
    'theme_default' => 'subtle_simplicity',
    'admin_theme' => 'seven',
  );
  theme_enable($enabled);

  foreach ($enabled as $var => $theme) {
    variable_set($var, $theme);
  }

  // Enable some standard blocks.
  $default_theme = variable_get('theme_default', 'subtle_simplicity');
  $admin_theme = variable_get('admin_theme', 'seven');
  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'openblog_profile',
      'delta' => 'openblog_profile_about',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_second',
      'pages' => '',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();

  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Sets the homepage
  variable_set('site_frontpage', 'homepage');

  // Allow visitor account creation with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Settings for ShareThis
  variable_set('sharethis_button_option', 'stbc_hcount');
  variable_set('sharethis_location', 'content');
  variable_set('sharethis_node_option', 'post');
  $sharethis_option_extras = array(
    'Google Plus One:plusone' => 'Google Plus One:plusone',
    'Facebook Like:fblike' => 'Facebook Like:fblike',
  );
  variable_set('sharethis_option_extras', $sharethis_option_extras);

  variable_set('sharethis_service_option', '"Tweet:twitter","Facebook:facebook","ShareThis:sharethis"');
  variable_set('sharethis_teaser_option', 0);
  variable_set('sharethis_twitter_suffix', '');
  variable_set('sharethis_weight', 10);
  variable_set('sharethis_widget_option', 'st_multi');

  // Enable default permissions for system roles.
  $anonymous_perms = array(
    'access content',
    'access user profiles',
    'access comments',
    'post comments',
  );
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, $anonymous_perms);

  $markdown_format_permission = filter_permission_name($markdown_format);
  $athenticated_perms = array(
    $markdown_format_permission,
    'access toolbar',
    'administer profiles',
    'skip comment approval',
    'access content overview',
  );
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array_merge($anonymous_perms, $athenticated_perms));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Create the Editor and Author role. The Editor role is the default role for users
  // and Author is for users who can post but the posts are not public.
  $roles = array(
    array(
      'name' => 'author',
      'perms' => array(
        'create post content',
        'delete own post content',
        'edit own post content',
        'revert revisions',
        'view own unpublished content',
        'view revisions',
      ),
    ),
    array(
      'name' => 'editor',
      'perms' => array(
        'bypass node access',
        'administer comments',
        'administer nodes',
        'administer users',
        'assign author role',
        'assign editor role',
        'create post content',
        'delete own post content',
        'delete any post content',
        'edit own post content',
        'edit any post content',
        'revert revisions',
        'view own unpublished content',
        'view revisions',
      ),
    ),
  );
  foreach($roles as $role) {
    $r = new stdClass();
    $r->name = $role['name'];
    user_role_save($r);
    user_role_grant_permissions($r->rid, $role['perms']);
  }

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
}

